@page "/"

<style>
    body {
        background-color: @BgColor;
        transition: background-color 2s ease-out;
    }
</style>

<section class="d-flex flex-row text-center mb-5">
    <button class="" @onclick="() => NextSession()">Skip ></button>
</section>

<section>
    <div class="container mb-5">
        <div class="row gap-xs-4">
            <div class="col-lg-4 col-sm-6">Finished work sessions: @CompletedWorkSessionCount of @CurPomodoroSet.RepsBeforeLongBreak</div>
            <div class="col-lg-4 col-sm-6">Work time: @CurPomodoroSet.WorkTime</div>
            <div class="col-lg-4 col-sm-6">Break times: @CurPomodoroSet.ShortBreak - @CurPomodoroSet.LongBreak</div>
        </div>
    </div>
</section>

<section class="text-center mt-5 mb-3">
    <h6 class="my-5 fw-bold">@AltWorkStateDisplay[0] @AltWorkStateDisplay[1]</h6>
    <h4>Time left</h4>
    <div class="fs-3">
        @{
            <p>@CountdownTimerDisplay</p>
        }
    </div>
</section>
<section class="fixed-bottom mb-5">
    <div class="d-flex flex-column" id="primary-btn-flex">

        <div class="btn-group gap-5 mb-5" role="group" aria-label="Basic example" style="width:85vw">
            @{
                if (MainTimerState == TimerState.NotStarted)
                {
                    <button class="btn btn-custom-start" @onclick="() => StartTimer(CurPomodoroSet)">Start</button>
                }
                if (MainTimerState == TimerState.Paused)
                {
                    <button class="btn btn-secondary" @onclick="() => ContinueTimer()">Continue</button>
                    <button class="btn btn-custom-stop" @onclick="() => CancelSessionAndMakeItRepeatable()">Cancel session</button>
                }
                if (MainTimerState == TimerState.Started)
                {
                    <button class="btn custom-cancel-btn" @onclick="() => PauseTimer()">Pause</button>
                    <button class="btn btn-custom-stop" @onclick="() => CancelSessionAndMakeItRepeatable()">Cancel session</button>
                }
            }
        </div>
    </div>
</section>

@code {
    // string j = Path.Combine(AppContext.BaseDirectory, "preferredDir.json");
}